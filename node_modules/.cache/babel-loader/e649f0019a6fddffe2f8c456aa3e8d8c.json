{"ast":null,"code":"export const SET_WORD = \"SETWORD\";\nexport const SET_CHAR = \"SETCHAR\";\nexport const TIMER_DECeREMENT = \"TIMERDECREMENT\";\nexport const APPEND_TYPED_HISTORY = \"APPENDTYPEDHISTORY\";\nexport const TIMER_SET = \"TIMERSET\";\nexport const TIMERID_SET = \"TIMERIDSET\";\nexport const PREV_WORD = \"PREVWORD\";\nexport const SET_WORDLIST = \"SETWORDLIST\";\nexport const SET_THEME = \"SETTHEME\";\nexport const SET_TIME = \"SETTIME\";\nexport const SET_REF = \"SETREF\";\nexport const SET_CARET_REF = \"SETCARETREF\";\nexport const SET_TYPE = \"SETTYPE\"; // Time Actions\n\nexport const timerDecrement = () => ({\n  type: TIMER_DECeREMENT\n});\nexport const timerSet = payload => ({\n  type: TIMER_SET,\n  payload\n});\nexport const setTimerId = payload => ({\n  type: TIMERID_SET,\n  payload\n}); // Word Actions\n\nexport const setWord = payload => ({\n  type: SET_WORD,\n  payload\n});\nexport const setChar = payload => ({\n  type: SET_CHAR,\n  payload\n});\nexport const setTypedWord = payload => ({\n  type: SET_CHAR,\n  payload\n});\nexport const appendTypedHistory = () => ({\n  type: APPEND_TYPED_HISTORY\n});\nexport const backtrackWord = payload => ({\n  type: PREV_WORD,\n  payload\n});\nexport const setWordList = payload => ({\n  type: SET_WORDLIST,\n  payload\n});\nexport const setRef = payload => ({\n  type: SET_REF,\n  payload\n});\nexport const setCaretRef = payload => ({\n  type: SET_CARET_REF,\n  payload\n}); // Prefrences Actions\n\nexport const setTheme = payload => ({\n  type: SET_THEME,\n  payload\n});\nexport const setTime = payload => ({\n  type: SET_TIME,\n  payload\n});\nexport const setType = payload => ({\n  type: SET_TYPE,\n  payload\n});","map":{"version":3,"sources":["/home/ismailyh/Desktop/project/typing-test/src/store/actions.ts"],"names":["SET_WORD","SET_CHAR","TIMER_DECeREMENT","APPEND_TYPED_HISTORY","TIMER_SET","TIMERID_SET","PREV_WORD","SET_WORDLIST","SET_THEME","SET_TIME","SET_REF","SET_CARET_REF","SET_TYPE","timerDecrement","type","timerSet","payload","setTimerId","setWord","setChar","setTypedWord","appendTypedHistory","backtrackWord","setWordList","setRef","setCaretRef","setTheme","setTime","setType"],"mappings":"AAEA,OAAO,MAAMA,QAAQ,GAAG,SAAjB;AACP,OAAO,MAAMC,QAAQ,GAAG,SAAjB;AACP,OAAO,MAAMC,gBAAgB,GAAG,gBAAzB;AACP,OAAO,MAAMC,oBAAoB,GAAG,oBAA7B;AACP,OAAO,MAAMC,SAAS,GAAG,UAAlB;AACP,OAAO,MAAMC,WAAW,GAAG,YAApB;AACP,OAAO,MAAMC,SAAS,GAAG,UAAlB;AACP,OAAO,MAAMC,YAAY,GAAG,aAArB;AACP,OAAO,MAAMC,SAAS,GAAG,UAAlB;AACP,OAAO,MAAMC,QAAQ,GAAG,SAAjB;AACP,OAAO,MAAMC,OAAO,GAAG,QAAhB;AACP,OAAO,MAAMC,aAAa,GAAG,aAAtB;AACP,OAAO,MAAMC,QAAQ,GAAG,SAAjB,C,CAEP;;AACA,OAAO,MAAMC,cAAc,GAAG,OAAO;AAAEC,EAAAA,IAAI,EAAEZ;AAAR,CAAP,CAAvB;AACP,OAAO,MAAMa,QAAQ,GAAIC,OAAD,KAAsB;AAAEF,EAAAA,IAAI,EAAEV,SAAR;AAAmBY,EAAAA;AAAnB,CAAtB,CAAjB;AACP,OAAO,MAAMC,UAAU,GAAID,OAAD,KAAmC;AACzDF,EAAAA,IAAI,EAAET,WADmD;AAEzDW,EAAAA;AAFyD,CAAnC,CAAnB,C,CAKP;;AACA,OAAO,MAAME,OAAO,GAAIF,OAAD,KAAsB;AAAEF,EAAAA,IAAI,EAAEd,QAAR;AAAkBgB,EAAAA;AAAlB,CAAtB,CAAhB;AACP,OAAO,MAAMG,OAAO,GAAIH,OAAD,KAAsB;AAAEF,EAAAA,IAAI,EAAEb,QAAR;AAAkBe,EAAAA;AAAlB,CAAtB,CAAhB;AACP,OAAO,MAAMI,YAAY,GAAIJ,OAAD,KAAsB;AAAEF,EAAAA,IAAI,EAAEb,QAAR;AAAkBe,EAAAA;AAAlB,CAAtB,CAArB;AACP,OAAO,MAAMK,kBAAkB,GAAG,OAAO;AACrCP,EAAAA,IAAI,EAAEX;AAD+B,CAAP,CAA3B;AAGP,OAAO,MAAMmB,aAAa,GAAIN,OAAD,KAAuB;AAChDF,EAAAA,IAAI,EAAER,SAD0C;AAEhDU,EAAAA;AAFgD,CAAvB,CAAtB;AAIP,OAAO,MAAMO,WAAW,GAAIP,OAAD,KAAwB;AAC/CF,EAAAA,IAAI,EAAEP,YADyC;AAE/CS,EAAAA;AAF+C,CAAxB,CAApB;AAIP,OAAO,MAAMQ,MAAM,GAAIR,OAAD,KAAyC;AAC3DF,EAAAA,IAAI,EAAEJ,OADqD;AAE3DM,EAAAA;AAF2D,CAAzC,CAAf;AAIP,OAAO,MAAMS,WAAW,GAAIT,OAAD,KAA0C;AACjEF,EAAAA,IAAI,EAAEH,aAD2D;AAEjEK,EAAAA;AAFiE,CAA1C,CAApB,C,CAKP;;AACA,OAAO,MAAMU,QAAQ,GAAIV,OAAD,KAAsB;AAAEF,EAAAA,IAAI,EAAEN,SAAR;AAAmBQ,EAAAA;AAAnB,CAAtB,CAAjB;AACP,OAAO,MAAMW,OAAO,GAAIX,OAAD,KAAsB;AAAEF,EAAAA,IAAI,EAAEL,QAAR;AAAkBO,EAAAA;AAAlB,CAAtB,CAAhB;AACP,OAAO,MAAMY,OAAO,GAAIZ,OAAD,KAAsB;AACzCF,EAAAA,IAAI,EAAEF,QADmC;AAEzCI,EAAAA;AAFyC,CAAtB,CAAhB","sourcesContent":["import { RefObject } from \"react\";\n\nexport const SET_WORD = \"SETWORD\";\nexport const SET_CHAR = \"SETCHAR\";\nexport const TIMER_DECeREMENT = \"TIMERDECREMENT\";\nexport const APPEND_TYPED_HISTORY = \"APPENDTYPEDHISTORY\";\nexport const TIMER_SET = \"TIMERSET\";\nexport const TIMERID_SET = \"TIMERIDSET\";\nexport const PREV_WORD = \"PREVWORD\";\nexport const SET_WORDLIST = \"SETWORDLIST\";\nexport const SET_THEME = \"SETTHEME\";\nexport const SET_TIME = \"SETTIME\";\nexport const SET_REF = \"SETREF\";\nexport const SET_CARET_REF = \"SETCARETREF\";\nexport const SET_TYPE = \"SETTYPE\";\n\n// Time Actions\nexport const timerDecrement = () => ({ type: TIMER_DECeREMENT });\nexport const timerSet = (payload: number) => ({ type: TIMER_SET, payload });\nexport const setTimerId = (payload: NodeJS.Timer | null) => ({\n    type: TIMERID_SET,\n    payload,\n});\n\n// Word Actions\nexport const setWord = (payload: string) => ({ type: SET_WORD, payload });\nexport const setChar = (payload: string) => ({ type: SET_CHAR, payload });\nexport const setTypedWord = (payload: string) => ({ type: SET_CHAR, payload });\nexport const appendTypedHistory = () => ({\n    type: APPEND_TYPED_HISTORY,\n});\nexport const backtrackWord = (payload: boolean) => ({\n    type: PREV_WORD,\n    payload,\n});\nexport const setWordList = (payload: string[]) => ({\n    type: SET_WORDLIST,\n    payload,\n});\nexport const setRef = (payload: RefObject<HTMLDivElement>) => ({\n    type: SET_REF,\n    payload,\n});\nexport const setCaretRef = (payload: RefObject<HTMLSpanElement>) => ({\n    type: SET_CARET_REF,\n    payload,\n});\n\n// Prefrences Actions\nexport const setTheme = (payload: string) => ({ type: SET_THEME, payload });\nexport const setTime = (payload: number) => ({ type: SET_TIME, payload });\nexport const setType = (payload: string) => ({\n    type: SET_TYPE,\n    payload,\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ismailyh/Desktop/project/typing-test/src/components/Result.tsx\",\n    _s = $RefreshSig$();\n\nimport { resetTest } from \"helpers/resetTest\";\nimport { useSelector } from \"react-redux\";\nimport \"stylesheets/Result.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Result() {\n  _s();\n\n  const {\n    word: {\n      wordList,\n      typedHistory,\n      currWord\n    },\n    preferences: {\n      timeLimit\n    }\n  } = useSelector(state => state);\n  const spaces = wordList.indexOf(currWord);\n  let correctChars = 0;\n  const result = typedHistory.map((typedWord, idx) => typedWord === wordList[idx]);\n  result.forEach((r, idx) => {\n    if (r) correctChars += wordList[idx].length;\n  });\n  const wpm = (correctChars + spaces) * 60 / timeLimit / 5;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 2,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: Math.round(wpm) + \" wpm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Correct Words:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.filter(x => x).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"wrong\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Incorrect Words:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.filter(x => !x).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 2,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => resetTest(),\n              children: \"Restart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Result, \"AovUpsH55ed2nQgkrZvkE8012Xo=\", false, function () {\n  return [useSelector];\n});\n\n_c = Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/home/ismailyh/Desktop/project/typing-test/src/components/Result.tsx"],"names":["resetTest","useSelector","Result","word","wordList","typedHistory","currWord","preferences","timeLimit","state","spaces","indexOf","correctChars","result","map","typedWord","idx","forEach","r","length","wpm","Math","round","filter","x"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,yBAAP;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,QAAM;AACFC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,YAAZ;AAA0BC,MAAAA;AAA1B,KADJ;AAEFC,IAAAA,WAAW,EAAE;AAAEC,MAAAA;AAAF;AAFX,MAGFP,WAAW,CAAEQ,KAAD,IAAkBA,KAAnB,CAHf;AAIA,QAAMC,MAAM,GAAGN,QAAQ,CAACO,OAAT,CAAiBL,QAAjB,CAAf;AAEA,MAAIM,YAAY,GAAG,CAAnB;AACA,QAAMC,MAAM,GAAGR,YAAY,CAACS,GAAb,CACX,CAACC,SAAD,EAAYC,GAAZ,KAAoBD,SAAS,KAAKX,QAAQ,CAACY,GAAD,CAD/B,CAAf;AAGAH,EAAAA,MAAM,CAACI,OAAP,CAAe,CAACC,CAAD,EAAIF,GAAJ,KAAY;AACvB,QAAIE,CAAJ,EAAON,YAAY,IAAIR,QAAQ,CAACY,GAAD,CAAR,CAAcG,MAA9B;AACV,GAFD;AAGA,QAAMC,GAAG,GAAI,CAACR,YAAY,GAAGF,MAAhB,IAA0B,EAA3B,GAAiCF,SAAjC,GAA6C,CAAzD;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACI;AAAA,6BACI;AAAA,gCACI;AAAA,iCACI;AAAI,YAAA,OAAO,EAAE,CAAb;AAAgB,YAAA,KAAK,EAAC,QAAtB;AAAA,mCACI;AAAA,wBAAKa,IAAI,CAACC,KAAL,CAAWF,GAAX,IAAkB;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKP,MAAM,CAACU,MAAP,CAAeC,CAAD,IAAOA,CAArB,EAAwBL;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAUI;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKN,MAAM,CAACU,MAAP,CAAeC,CAAD,IAAO,CAACA,CAAtB,EAAyBL;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAcI;AAAA,iCACI;AAAI,YAAA,OAAO,EAAE,CAAb;AAAgB,YAAA,KAAK,EAAC,QAAtB;AAAA,mCACI;AAAQ,cAAA,OAAO,EAAE,MAAMnB,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GAzCuBE,M;UAIhBD,W;;;KAJgBC,M","sourcesContent":["import { resetTest } from \"helpers/resetTest\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"store/reducer\";\nimport \"stylesheets/Result.scss\";\n\nexport default function Result() {\n    const {\n        word: { wordList, typedHistory, currWord },\n        preferences: { timeLimit },\n    } = useSelector((state: State) => state);\n    const spaces = wordList.indexOf(currWord);\n    \n    let correctChars = 0;\n    const result = typedHistory.map(\n        (typedWord, idx) => typedWord === wordList[idx]\n    );\n    result.forEach((r, idx) => {\n        if (r) correctChars += wordList[idx].length;\n    });\n    const wpm = ((correctChars + spaces) * 60) / timeLimit / 5;\n    return (\n        <div className=\"result\">\n            <table>\n                <tbody>\n                    <tr>\n                        <td colSpan={2} align=\"center\">\n                            <h1>{Math.round(wpm) + \" wpm\"}</h1>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Correct Words:</th>\n                        <td>{result.filter((x) => x).length}</td>\n                    </tr>\n                    <tr className=\"wrong\">\n                        <th>Incorrect Words:</th>\n                        <td>{result.filter((x) => !x).length}</td>\n                    </tr>\n                    <tr>\n                        <td colSpan={2} align=\"center\">\n                            <button onClick={() => resetTest()}>Restart</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
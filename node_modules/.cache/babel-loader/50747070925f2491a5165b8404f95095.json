{"ast":null,"code":"var _jsxFileName = \"/home/ismailyh/Desktop/project/typing-test/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Header from \"components/Header\";\nimport Test from \"components/Test\";\nimport Result from \"components/Result\";\nimport { setTimerId } from \"store/actions\";\nimport { recordTest } from \"helpers/recordTest\";\nimport \"stylesheets/themes.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const {\n    time: {\n      timerId,\n      timer\n    },\n    word: {\n      currWord,\n      typedWord,\n      activeWordRef\n    }\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    document.onkeydown = e => {\n      if (e.key.length === 1 || e.key === \"Backspace\" || e.key === \"Tab\") {\n        recordTest(e.key, e.ctrlKey);\n        e.preventDefault();\n      }\n    };\n\n    return () => {\n      document.onkeydown = null;\n    };\n  }, [dispatch]);\n  useEffect(() => {\n    let idx = typedWord.length - 1;\n    console.log(\"use effect in app 2\");\n    const currWordEl = activeWordRef === null || activeWordRef === void 0 ? void 0 : activeWordRef.current;\n\n    if (currWordEl) {\n      currWordEl.children[idx + 1].classList.add(currWord[idx] !== typedWord[idx] ? \"wrong\" : \"right\");\n    }\n  }, [currWord, typedWord, activeWordRef]);\n  useEffect(() => {\n    let idx = typedWord.length;\n    console.log(\"use effect in app 3\");\n    const currWordEl = activeWordRef === null || activeWordRef === void 0 ? void 0 : activeWordRef.current;\n    if (currWordEl && idx < currWord.length) currWordEl.children[idx + 1].classList.remove(\"wrong\", \"right\");\n  }, [currWord.length, typedWord, activeWordRef]);\n  useEffect(() => {\n    console.log(`timer is ${timer}`);\n    console.log(`timer_id is ${timerId}`);\n\n    if (!timer && timerId) {\n      clearInterval(timerId);\n      dispatch(setTimerId(null));\n    }\n  }, [dispatch, timer, timerId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), timer ? /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(Result, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"YHjaAgTilf5AuD8NEjGd950rfRM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ismailyh/Desktop/project/typing-test/src/App.tsx"],"names":["useEffect","useDispatch","useSelector","Header","Test","Result","setTimerId","recordTest","App","time","timerId","timer","word","currWord","typedWord","activeWordRef","state","dispatch","document","onkeydown","e","key","length","ctrlKey","preventDefault","idx","console","log","currWordEl","current","children","classList","add","remove","clearInterval"],"mappings":";;;AAAA,SAASA,SAAT,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAKA,SAASC,UAAT,QAA2B,eAA3B;AAEA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,OAAO,yBAAP;;;AAIA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC1B,QAAM;AACFC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KADJ;AAEFC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,SAAZ;AAAuBC,MAAAA;AAAvB;AAFJ,MAGFb,WAAW,CAAEc,KAAD,IAAkBA,KAAnB,CAHf;AAIA,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,QAAQ,CAACC,SAAT,GAAsBC,CAAD,IAAO;AACxB,UAAIA,CAAC,CAACC,GAAF,CAAMC,MAAN,KAAiB,CAAjB,IAAsBF,CAAC,CAACC,GAAF,KAAU,WAAhC,IAA+CD,CAAC,CAACC,GAAF,KAAU,KAA7D,EAAoE;AAChEd,QAAAA,UAAU,CAACa,CAAC,CAACC,GAAH,EAAQD,CAAC,CAACG,OAAV,CAAV;AACAH,QAAAA,CAAC,CAACI,cAAF;AACH;AACJ,KALD;;AAMA,WAAO,MAAM;AACTN,MAAAA,QAAQ,CAACC,SAAT,GAAqB,IAArB;AACH,KAFD;AAGH,GAVQ,EAUN,CAACF,QAAD,CAVM,CAAT;AAaAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIyB,GAAG,GAAGX,SAAS,CAACQ,MAAV,GAAmB,CAA7B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,UAAMC,UAAU,GAAGb,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEc,OAAlC;;AACA,QAAID,UAAJ,EAAgB;AACZA,MAAAA,UAAU,CAACE,QAAX,CAAoBL,GAAG,GAAG,CAA1B,EAA6BM,SAA7B,CAAuCC,GAAvC,CACInB,QAAQ,CAACY,GAAD,CAAR,KAAkBX,SAAS,CAACW,GAAD,CAA3B,GAAmC,OAAnC,GAA6C,OADjD;AAGH;AACJ,GATQ,EASN,CAACZ,QAAD,EAAWC,SAAX,EAAsBC,aAAtB,CATM,CAAT;AAWAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIyB,GAAG,GAAGX,SAAS,CAACQ,MAApB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,UAAMC,UAAU,GAAGb,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEc,OAAlC;AACA,QAAID,UAAU,IAAIH,GAAG,GAAGZ,QAAQ,CAACS,MAAjC,EACIM,UAAU,CAACE,QAAX,CAAoBL,GAAG,GAAG,CAA1B,EAA6BM,SAA7B,CAAuCE,MAAvC,CAA8C,OAA9C,EAAuD,OAAvD;AACP,GANQ,EAMN,CAACpB,QAAQ,CAACS,MAAV,EAAkBR,SAAlB,EAA6BC,aAA7B,CANM,CAAT;AASAf,EAAAA,SAAS,CAAC,MAAM;AACZ0B,IAAAA,OAAO,CAACC,GAAR,CAAa,YAAWhB,KAAM,EAA9B;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAa,eAAcjB,OAAQ,EAAnC;;AACA,QAAI,CAACC,KAAD,IAAUD,OAAd,EAAuB;AACnBwB,MAAAA,aAAa,CAACxB,OAAD,CAAb;AACAO,MAAAA,QAAQ,CAACX,UAAU,CAAC,IAAD,CAAX,CAAR;AACH;AACJ,GAPQ,EAON,CAACW,QAAD,EAAWN,KAAX,EAAkBD,OAAlB,CAPM,CAAT;AAUA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKC,KAAK,gBAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAc,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFxB;AAAA,kBADJ;AAOH;;GAzDuBH,G;UAIhBN,W,EACaD,W;;;KALGO,G","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Header from \"components/Header\";\nimport Test from \"components/Test\";\nimport Result from \"components/Result\";\nimport Footer from \"components/Footer\";\n//import CommandPallet from \"components/CommandPallet\";\n\nimport { State } from \"store/reducer\";\nimport { setTimerId } from \"store/actions\";\n\nimport { recordTest } from \"helpers/recordTest\";\n\nimport \"stylesheets/themes.scss\";\n\n\n\nexport default function App() {\n    const {\n        time: { timerId, timer },\n        word: { currWord, typedWord, activeWordRef },\n    } = useSelector((state: State) => state);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        document.onkeydown = (e) => {\n            if (e.key.length === 1 || e.key === \"Backspace\" || e.key === \"Tab\") {\n                recordTest(e.key, e.ctrlKey);\n                e.preventDefault();\n            }\n        };\n        return () => {\n            document.onkeydown = null;\n        };\n    }, [dispatch]);\n\n\n    useEffect(() => {\n        let idx = typedWord.length - 1;\n        console.log(\"use effect in app 2\")\n        const currWordEl = activeWordRef?.current!;\n        if (currWordEl) {\n            currWordEl.children[idx + 1].classList.add(\n                currWord[idx] !== typedWord[idx] ? \"wrong\" : \"right\"\n            );\n        }\n    }, [currWord, typedWord, activeWordRef]);\n\n    useEffect(() => {\n        let idx = typedWord.length;\n        console.log(\"use effect in app 3\")\n        const currWordEl = activeWordRef?.current!;\n        if (currWordEl && idx < currWord.length)\n            currWordEl.children[idx + 1].classList.remove(\"wrong\", \"right\");\n    }, [currWord.length, typedWord, activeWordRef]);\n\n    \n    useEffect(() => {\n        console.log(`timer is ${timer}`)\n        console.log(`timer_id is ${timerId}`)\n        if (!timer && timerId) {\n            clearInterval(timerId);\n            dispatch(setTimerId(null));\n        }\n    }, [dispatch, timer, timerId]);\n\n\n    return (\n        <>\n            <Header />\n            {timer ? <Test /> : <Result />}\n            \n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}